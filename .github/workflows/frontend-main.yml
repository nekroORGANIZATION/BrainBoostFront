name: Frontend â†’ Prod (build in GitHub, run on VM)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: nekroorganization
  IMAGE_NAME: frontend
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_WRITE_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:prod

  deploy-to-prod:
    runs-on: self-hosted
    needs: build-and-push
    environment: main
    steps:
      - name: Deploy via SSH
        shell: bash
        run: |
          mkdir -p "${{ runner.temp }}"
          printf '%s\n' "${{ secrets.RUNNER_SSH_KEY }}" | sed 's/\r$//' > "${{ runner.temp }}/k"
          chmod 600 "${{ runner.temp }}/k"

          ssh -i "${{ runner.temp }}/k" -p "${{ secrets.RUNNER_SSH_PORT || 22 }}" -o StrictHostKeyChecking=no \
            "${{ secrets.RUNNER_USER }}@${{ secrets.RUNNER_HOST }}" '
              set -e
              cd /opt/myapp
              docker compose pull frontend
              docker compose up -d frontend
              docker image prune -f
            '
