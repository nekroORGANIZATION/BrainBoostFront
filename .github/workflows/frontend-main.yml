name: Frontend → Prod (build in GitHub, run on VM)

on:
  push:
    branches: ["main"]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  OWNER: nekroorganization
  IMAGE_NAME: frontend
  IMAGE_TAG: ${{ github.sha }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_WRITE_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:prod

  deploy-to-prod:
    needs: build-and-push
    runs-on: self-hosted
    environment: main
    steps:
      - name: Deploy via SSH
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p "${{ runner.temp }}"
          KEYFILE="${{ runner.temp }}/main_ssh_key"

          # зберігаємо приватний ключ з Secret у файл (багаторядковий OpenSSH)
          # sed зніме можливі \r якщо ключ вставили з Windows
          printf '%s\n' "${{ secrets.MAIN_SSH_KEY }}" | sed 's/\r$//' > "$KEYFILE"
          chmod 600 "$KEYFILE"

          # порт опційний: якщо секрет MAIN_SSH_PORT не заданий — беремо 22
          PORT="${{ secrets.MAIN_SSH_PORT }}"
          if [ -z "$PORT" ]; then PORT=22; fi

          # логінимося на прод; передаємо GHCR_USER/READ_TOKEN для docker login на хості
          ssh -i "$KEYFILE" -p "$PORT" -o IdentitiesOnly=yes -o StrictHostKeyChecking=no \
            "${{ secrets.MAIN_RUNNER_USER }}@${{ secrets.MAIN_TARGET_HOST }}" \
            "GHCR_USER='${{ secrets.GHCR_USER }}' GHCR_READ_TOKEN='${{ secrets.GHCR_READ_TOKEN }}' bash -s" << 'EOSH'
              set -euo pipefail
              cd /opt/myapp
              if [ -n "${GHCR_USER:-}" ] && [ -n "${GHCR_READ_TOKEN:-}" ]; then
                echo "$GHCR_READ_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin || true
              fi
              docker compose pull frontend
              docker compose up -d frontend
              docker image prune -f
          EOSH
      - name: Cleanup SSH key
        if: always()
        run: |
          rm -f "${{ runner.temp }}/main_ssh_key"
