name: Frontend → Tester (remote build)

on:
  push:
    branches: ["dev"]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: self-hosted
    environment: dev
    steps:
      - uses: actions/checkout@v4

      - name: Set target
        run: |
          echo HOST=${{ secrets.TARGET_HOST }} >> $GITHUB_ENV
          echo USER=${{ secrets.TARGET_USER }} >> $GITHUB_ENV
          echo PORT=${{ secrets.TARGET_SSH_PORT || 22 }} >> $GITHUB_ENV

      - name: Write SSH key & test
        shell: bash
        run: |
          mkdir -p "${{ runner.temp }}"
          KEY="${{ secrets.TARGET_SSH_KEY }}"
          printf '%s\n' "$KEY" | sed 's/\r$//' > "${{ runner.temp }}/k"
          chmod 600 "${{ runner.temp }}/k"
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" echo ok

      - name: Sync code to Tester (/opt/brainboost/src/frontend)
        shell: bash
        run: |
          RSYNC_RSH="ssh -i ${{ runner.temp }}/k -p $PORT -o StrictHostKeyChecking=no"
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "mkdir -p /opt/brainboost/src/frontend"
          rsync -az --delete --exclude ".git" --exclude "node_modules" --exclude ".github" \
            -e "$RSYNC_RSH" ./ "$USER@$HOST:/opt/brainboost/src/frontend/"

      - name: Stop old container & image
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" '
            docker stop brainboost-front || true
            docker rm   brainboost-front || true
            docker rmi  brainboost-front:latest || true
          '

      - name: Build frontend image on Tester
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" '
            set -e
            cd /opt/brainboost/src/frontend
          
            docker build \
              --build-arg BUILD_SHA='${{ github.sha }}' \
              -t brainboost-front:latest .
          '

      - name: Run frontend on port 3000
        shell: bash
        run: |
          ssh -i "${{ runner.temp }}/k" -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" '
            set -e
           
            docker run -d --name brainboost-front --restart unless-stopped \
              -p 3000:3000 brainboost-front:latest

            echo "Waiting for http://127.0.0.1:3000 ..."
            for i in $(seq 1 60); do
              code="$(curl -s -m 2 -o /dev/null -w "%{http_code}" http://127.0.0.1:3000/ || true)"
              if [ -n "$code" ] && [ "$code" != "000" ]; then
                echo "Frontend is up (HTTP $code) ✅"
                exit 0
              fi
              sleep 1
            done
            echo "Frontend did not become ready in time. Logs:"
            docker logs --tail=200 brainboost-front || true
            exit 1
          '
